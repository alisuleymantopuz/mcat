var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.392,1,1.6]],["body/controllers/AppController.html",[0,2.037,1,2.342,2,1.556,3,0.513,4,0.43,5,0.43,6,2.472,7,0.513,8,2.037,9,3.827,10,1.556,11,0.05,12,0.921,13,3.066,14,1.556,15,1.375,16,0.672,17,0.805,18,1.988,19,2.472,20,0.513,21,0.28,22,2.472,23,1.196,24,1.556,25,3.066,26,0.028,27,0.037,28,0.028]],["title/modules/AppModule.html",[29,1.069,30,1.6]],["body/modules/AppModule.html",[1,2.215,2,1.642,3,0.375,4,0.315,5,0.315,11,0.05,16,0.811,17,0.589,18,2.039,19,1.807,20,0.375,21,0.205,26,0.02,27,0.03,28,0.02,29,1.48,30,2.924,31,0.996,32,1.138,33,1.522,34,1.522,35,1.138,36,2.576,37,1.522,38,1.807,39,1.807,40,1.807,41,2.33,42,2.33,43,2.196,44,1.522,45,1.522,46,2.241,47,2.608,48,2.241,49,2.241,50,2.241,51,1.807,52,1.308,53,2.241,54,1.522,55,1.888,56,2.241,57,2.241,58,2.241,59,2.241,60,2.241,61,2.241]],["title/injectables/AppService.html",[18,1.218,62,0.824]],["body/injectables/AppService.html",[3,0.55,4,0.461,5,0.461,7,0.55,8,2.129,9,3.928,11,0.049,12,0.987,14,1.667,15,1.438,16,0.55,17,0.862,18,1.864,20,0.55,21,0.3,24,1.667,26,0.03,27,0.038,28,0.03,62,1.261,63,1.667,64,2.648,65,3.283,66,3.283,67,3.283]],["title/classes/BulkCreateGenreDto.html",[21,0.25,68,1.069]],["body/classes/BulkCreateGenreDto.html",[3,0.471,4,0.395,5,0.395,7,0.471,10,1.427,11,0.049,12,0.845,15,1.468,16,0.634,20,0.717,21,0.392,23,1.924,26,0.026,27,0.035,28,0.026,68,1.478,69,1.641,70,1.641,71,1.923,72,2.501,73,0.845,74,1.672,75,3.348,76,2.811,77,1.641,78,1.249,79,1.427,80,1.683,81,1.427,82,1.427]],["title/modules/CommonModule.html",[29,1.069,41,1.392]],["body/modules/CommonModule.html",[3,0.627,4,0.525,5,0.525,11,0.048,16,0.627,17,0.983,20,0.627,21,0.342,26,0.034,27,0.042,28,0.034,29,1.776,31,1.663,41,2.311,83,3.743]],["title/classes/CreateGenreDto.html",[21,0.25,74,1.069]],["body/classes/CreateGenreDto.html",[3,0.471,4,0.395,5,0.395,7,0.471,10,1.427,11,0.049,12,0.845,15,1.571,16,0.634,20,0.717,21,0.392,23,1.924,26,0.026,27,0.035,28,0.026,68,1.097,69,1.641,70,1.641,71,1.923,72,1.641,73,0.845,74,1.672,75,3.348,77,1.641,78,1.249,79,1.427,80,2.037,81,1.427,82,1.427,84,2.811]],["title/interfaces/Genre.html",[85,1.6,86,1.218]],["body/interfaces/Genre.html",[3,0.513,4,0.43,5,0.43,7,0.513,11,0.049,15,1.732,16,0.672,20,0.513,26,0.028,27,0.037,28,0.028,71,2.037,73,1.206,78,1.362,79,1.556,80,2.109,82,2.409,85,1.789,86,1.783,87,3.066,88,2.472,89,4.013,90,4.473,91,2.081]],["title/controllers/GenresController.html",[0,1.392,92,1.6]],["body/controllers/GenresController.html",[0,0.815,2,0.815,3,0.269,4,0.225,5,0.225,7,0.269,8,1.276,10,1.934,11,0.05,12,1.145,14,1.934,16,0.519,17,0.421,20,0.269,21,0.147,22,1.294,24,1.934,26,0.015,27,0.023,28,0.015,68,1.577,72,2.625,73,0.756,74,1.577,86,1.117,92,1.468,93,1.294,94,1.604,95,3.356,96,2.028,97,2.514,98,2.028,99,2.028,100,2.83,101,1.294,102,3.1,103,1.604,104,2.382,105,2.048,106,2.382,107,1.604,108,2.514,109,1.604,110,1.294,111,2.514,112,1.604,113,2.83,114,1.294,115,2.514,116,1.604,117,1.604,118,1.604,119,1.604,120,1.604,121,1.604,122,0.713,123,1.294,124,1.294,125,1.604,126,1.604,127,2.587,128,3.073,129,1.604,130,1.604,131,1.604,132,1.604,133,1.604,134,1.604,135,1.604,136,1.604,137,1.604]],["title/modules/GenresModule.html",[29,1.069,42,1.392]],["body/modules/GenresModule.html",[2,1.841,3,0.441,4,0.37,5,0.37,11,0.049,16,0.784,17,0.692,20,0.441,21,0.241,26,0.024,27,0.033,28,0.024,29,1.617,31,1.172,32,1.338,33,1.79,34,1.79,35,1.338,36,2.814,37,1.79,42,2.455,43,2.462,44,1.79,45,1.79,47,2.126,51,2.126,52,1.539,86,1.172,92,2.419,105,1.539,122,2.149,123,2.126,138,2.126,139,2.126,140,2.636,141,2.636,142,2.462,143,2.636,144,2.636,145,2.636]],["title/injectables/GenresService.html",[62,0.824,122,1.218]],["body/injectables/GenresService.html",[3,0.232,4,0.194,5,0.194,7,0.232,8,1.136,11,0.05,12,1.139,14,1.8,16,0.695,17,0.364,20,0.232,21,0.127,23,0.541,24,1.8,26,0.013,27,0.02,28,0.013,52,0.809,62,0.673,63,0.704,68,1.383,73,1.065,74,1.383,78,1.772,79,0.704,80,0.994,86,1.435,91,0.941,95,3.251,96,1.804,98,1.804,99,1.804,100,2.605,101,1.804,104,2.407,105,2.069,106,2.407,110,1.804,113,1.804,114,1.804,122,0.994,124,1.804,127,2.193,128,2.269,146,1.118,147,2.238,148,1.118,149,1.386,150,3.23,151,1.386,152,2.238,153,1.386,154,4.402,155,2.238,156,1.386,157,1.386,158,1.386,159,1.386,160,1.386,161,1.386,162,1.386,163,0.809,164,1.386,165,1.386,166,1.118,167,3.23,168,2.238,169,1.386,170,2.238,171,1.911,172,1.386,173,2.238,174,1.386,175,1.386,176,1.386,177,1.386,178,1.386,179,1.386,180,1.386,181,1.386,182,1.386,183,1.386,184,1.386]],["title/classes/ListeGenreDto.html",[21,0.25,81,1.392]],["body/classes/ListeGenreDto.html",[3,0.441,4,0.37,5,0.37,7,0.441,10,1.841,11,0.049,12,1.09,15,1.604,16,0.607,20,0.694,21,0.379,23,1.969,26,0.024,27,0.033,28,0.024,68,1.029,69,1.539,70,1.539,71,1.841,72,1.539,73,1.09,74,1.415,75,3.364,77,1.539,78,1.172,79,1.338,80,1.984,81,1.841,82,2.104,185,2.636,186,2.636]],["title/injectables/Messages.html",[62,0.824,163,1.6]],["body/injectables/Messages.html",[3,0.404,4,0.338,5,0.338,7,0.404,11,0.048,12,1.188,15,1.354,16,0.404,17,0.633,20,0.404,21,0.22,23,1.959,26,0.022,27,0.031,28,0.022,62,1.024,63,1.224,71,1.73,73,1.188,163,1.989,187,1.945,188,5.021,189,3.952,190,3.952,191,3.952,192,3.187,193,3.187,194,4.703,195,3.407,196,3.407,197,2.411,198,2.748,199,2.411,200,3.407,201,2.411,202,3.952]],["title/injectables/TerminusOptionsService.html",[55,1.6,62,0.824]],["body/injectables/TerminusOptionsService.html",[3,0.416,4,0.348,5,0.348,7,0.416,8,1.765,11,0.05,12,1.045,14,1.26,16,0.582,17,0.652,20,0.416,21,0.227,23,0.968,24,1.26,26,0.023,27,0.032,28,0.023,54,1.685,55,2.03,62,1.045,63,1.26,73,0.746,95,1.685,104,1.685,105,1.449,106,1.685,127,1.685,148,2.804,166,2.001,203,3.237,204,2.001,205,4.35,206,2.482,207,4.35,208,2.482,209,3.477,210,2.482,211,4.014,212,3.477,213,3.477,214,2.482,215,3.477,216,2.482,217,2.482,218,2.482,219,2.482,220,2.482,221,2.482]],["title/coverage.html",[222,2.528]],["body/coverage.html",[0,1.784,1,1.47,5,0.353,6,2.031,11,0.048,18,1.119,21,0.37,26,0.023,27,0.032,28,0.023,35,1.279,55,1.47,62,1.316,64,2.031,68,0.983,70,2.362,73,0.757,74,0.983,81,1.279,85,1.47,86,1.119,88,2.031,92,1.47,93,2.031,122,1.119,142,1.71,146,2.031,163,1.47,171,1.71,187,2.031,203,2.031,204,2.031,222,1.71,223,2.519,224,2.519,225,2.519,226,5.236,227,4.378,228,2.519,229,4.046,230,2.519,231,2.519,232,2.031,233,2.519,234,3.513,235,2.031,236,2.519,237,2.519,238,2.519]],["title/dependencies.html",[32,1.671,239,2.297]],["body/dependencies.html",[11,0.05,17,0.796,26,0.028,27,0.036,28,0.028,32,1.538,52,1.768,54,2.057,77,1.768,91,2.057,240,3.029,241,3.029,242,4.447,243,3.029,244,3.029,245,3.029,246,3.981,247,3.029,248,3.029,249,3.029,250,3.029,251,3.029,252,3.981,253,3.029,254,3.029,255,3.029,256,3.029,257,3.029,258,3.029,259,3.029,260,3.029,261,3.029,262,3.029,263,3.029]],["title/miscellaneous/functions.html",[264,1.341,265,2.655]],["body/miscellaneous/functions.html",[7,0.666,11,0.043,26,0.036,27,0.043,28,0.036,35,2.556,235,3.207,264,2.321,265,3.207,266,3.977]],["title/index.html",[7,0.385,267,2.297,268,2.297]],["body/index.html",[4,0.332,11,0.048,26,0.022,27,0.031,28,0.022,222,1.607,269,2.366,270,2.366,271,3.362,272,2.366,273,2.366,274,2.366,275,2.366,276,2.366,277,2.366,278,2.366,279,2.366,280,2.366,281,2.366,282,3.911,283,2.366,284,2.366,285,2.366,286,2.366,287,4.808,288,2.366,289,2.366,290,2.366,291,4.674,292,2.366,293,2.366,294,3.362,295,2.366,296,2.366,297,2.366,298,2.366,299,3.362,300,3.362,301,2.366,302,2.366,303,2.366,304,3.362,305,3.362,306,2.366,307,2.366,308,2.366,309,2.366,310,2.366,311,1.908,312,2.366,313,2.366,314,2.366,315,2.366,316,2.366,317,2.366,318,2.366,319,2.366,320,2.366,321,2.366,322,2.366,323,2.366,324,2.366,325,2.366,326,2.366,327,2.366,328,2.366,329,2.366]],["title/modules.html",[31,1.655]],["body/modules.html",[11,0.042,26,0.034,27,0.042,28,0.034,30,2.201,31,1.675,41,1.914,42,1.914,198,3.041,311,3.687,330,4.572,331,4.572,332,4.92,333,3.77]],["title/overview.html",[334,3.003]],["body/overview.html",[2,1.493,11,0.046,18,1.948,26,0.027,27,0.036,28,0.027,29,1.148,30,3.021,31,1.307,32,1.493,33,1.997,34,1.997,35,1.493,36,1.997,37,1.997,38,2.372,39,2.372,40,2.372,41,2.225,42,2.467,43,2.651,44,1.997,45,1.997,63,1.493,69,1.717,85,1.717,122,1.948,138,2.372,139,2.372,334,2.372,335,3.905,336,2.941,337,2.941,338,2.941]],["title/miscellaneous/variables.html",[264,1.341,339,2.655]],["body/miscellaneous/variables.html",[7,0.622,11,0.046,15,1.273,26,0.034,27,0.041,28,0.034,78,1.651,80,1.651,82,1.886,142,3.076,171,2.522,192,2.996,193,2.996,232,2.996,264,2.169,339,2.996,340,3.715,341,3.715]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BulkCreateGenreDto.html":{},"modules/CommonModule.html":{},"classes/CreateGenreDto.html":{},"interfaces/Genre.html":{},"controllers/GenresController.html":{},"modules/GenresModule.html":{},"injectables/GenresService.html":{},"classes/ListeGenreDto.html":{},"injectables/Messages.html":{},"injectables/TerminusOptionsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":226,"title":{},"body":{"coverage.html":{}}}],["0.1.12",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":234,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":229,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":228,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":230,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":231,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":338,"title":{},"body":{"overview.html":{}}}],["2",{"_index":336,"title":{},"body":{"overview.html":{}}}],["2.4.0",{"_index":253,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":259,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":335,"title":{},"body":{"overview.html":{}}}],["3.1.0",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":337,"title":{},"body":{"overview.html":{}}}],["4.0.7",{"_index":263,"title":{},"body":{"dependencies.html":{}}}],["4.1.2",{"_index":241,"title":{},"body":{"dependencies.html":{}}}],["404",{"_index":183,"title":{},"body":{"injectables/GenresService.html":{}}}],["5.5.11",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["5.6.6",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["6.0.0",{"_index":242,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":244,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":261,"title":{},"body":{"dependencies.html":{}}}],["6.5.0",{"_index":248,"title":{},"body":{"dependencies.html":{}}}],["amazing",{"_index":312,"title":{},"body":{"index.html":{}}}],["angular",{"_index":280,"title":{},"body":{"index.html":{}}}],["apimodelproperty",{"_index":75,"title":{},"body":{"classes/BulkCreateGenreDto.html":{},"classes/CreateGenreDto.html":{},"classes/ListeGenreDto.html":{}}}],["app",{"_index":289,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":277,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":95,"title":{},"body":{"controllers/GenresController.html":{},"injectables/GenresService.html":{},"injectables/TerminusOptionsService.html":{}}}],["author",{"_index":322,"title":{},"body":{"index.html":{}}}],["available",{"_index":198,"title":{},"body":{"injectables/Messages.html":{},"modules.html":{}}}],["await",{"_index":128,"title":{},"body":{"controllers/GenresController.html":{},"injectables/GenresService.html":{}}}],["backers",{"_index":313,"title":{},"body":{"index.html":{}}}],["body",{"_index":119,"title":{},"body":{"controllers/GenresController.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/GenresModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":332,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":330,"title":{},"body":{"modules.html":{}}}],["building",{"_index":272,"title":{},"body":{"index.html":{}}}],["bulkcreategenredto",{"_index":68,"title":{"classes/BulkCreateGenreDto.html":{}},"body":{"classes/BulkCreateGenreDto.html":{},"classes/CreateGenreDto.html":{},"controllers/GenresController.html":{},"injectables/GenresService.html":{},"classes/ListeGenreDto.html":{},"coverage.html":{}}}],["bulkcreategenredto.genres",{"_index":174,"title":{},"body":{"injectables/GenresService.html":{}}}],["bulkcreategenredto.genres.foreach(element",{"_index":175,"title":{},"body":{"injectables/GenresService.html":{}}}],["catalog",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["class",{"_index":21,"title":{"classes/BulkCreateGenreDto.html":{},"classes/CreateGenreDto.html":{},"classes/ListeGenreDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BulkCreateGenreDto.html":{},"modules/CommonModule.html":{},"classes/CreateGenreDto.html":{},"controllers/GenresController.html":{},"modules/GenresModule.html":{},"injectables/GenresService.html":{},"classes/ListeGenreDto.html":{},"injectables/Messages.html":{},"injectables/TerminusOptionsService.html":{},"coverage.html":{}}}],["classes",{"_index":69,"title":{},"body":{"classes/BulkCreateGenreDto.html":{},"classes/CreateGenreDto.html":{},"classes/ListeGenreDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_genresmodule",{"_index":138,"title":{},"body":{"modules/GenresModule.html":{},"overview.html":{}}}],["cluster_genresmodule_providers",{"_index":139,"title":{},"body":{"modules/GenresModule.html":{},"overview.html":{}}}],["common/common.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["common/messages",{"_index":164,"title":{},"body":{"injectables/GenresService.html":{}}}],["commonmodule",{"_index":41,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["const",{"_index":127,"title":{},"body":{"controllers/GenresController.html":{},"injectables/GenresService.html":{},"injectables/TerminusOptionsService.html":{}}}],["constructor",{"_index":148,"title":{},"body":{"injectables/GenresService.html":{},"injectables/TerminusOptionsService.html":{}}}],["constructor(@injectmodel('genre",{"_index":165,"title":{},"body":{"injectables/GenresService.html":{}}}],["constructor(dns",{"_index":206,"title":{},"body":{"injectables/TerminusOptionsService.html":{}}}],["constructor(genremodel",{"_index":149,"title":{},"body":{"injectables/GenresService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/GenresController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/GenresController.html":{}},"body":{"controllers/AppController.html":{},"controllers/GenresController.html":{},"coverage.html":{}}}],["controller('genres",{"_index":125,"title":{},"body":{"controllers/GenresController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/GenresController.html":{},"modules/GenresModule.html":{},"overview.html":{}}}],["coverage",{"_index":222,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creategenre",{"_index":96,"title":{},"body":{"controllers/GenresController.html":{},"injectables/GenresService.html":{}}}],["creategenre(@body",{"_index":132,"title":{},"body":{"controllers/GenresController.html":{}}}],["creategenre(creategenredto",{"_index":101,"title":{},"body":{"controllers/GenresController.html":{},"injectables/GenresService.html":{}}}],["creategenrebulk",{"_index":97,"title":{},"body":{"controllers/GenresController.html":{}}}],["creategenrebulk(@body",{"_index":134,"title":{},"body":{"controllers/GenresController.html":{}}}],["creategenrebulk(bulkcreategenredto",{"_index":107,"title":{},"body":{"controllers/GenresController.html":{}}}],["creategenredto",{"_index":74,"title":{"classes/CreateGenreDto.html":{}},"body":{"classes/BulkCreateGenreDto.html":{},"classes/CreateGenreDto.html":{},"controllers/GenresController.html":{},"injectables/GenresService.html":{},"classes/ListeGenreDto.html":{},"coverage.html":{}}}],["creategenredto.title",{"_index":169,"title":{},"body":{"injectables/GenresService.html":{}}}],["creategenres",{"_index":147,"title":{},"body":{"injectables/GenresService.html":{}}}],["creategenres(bulkcreategenredto",{"_index":155,"title":{},"body":{"injectables/GenresService.html":{}}}],["createterminusoptions",{"_index":205,"title":{},"body":{"injectables/TerminusOptionsService.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/GenresModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/BulkCreateGenreDto.html":{},"classes/CreateGenreDto.html":{},"controllers/GenresController.html":{},"classes/ListeGenreDto.html":{}}}],["default",{"_index":192,"title":{},"body":{"injectables/Messages.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BulkCreateGenreDto.html":{},"classes/CreateGenreDto.html":{},"controllers/GenresController.html":{},"injectables/GenresService.html":{},"classes/ListeGenreDto.html":{},"injectables/Messages.html":{},"injectables/TerminusOptionsService.html":{}}}],["delete",{"_index":121,"title":{},"body":{"controllers/GenresController.html":{}}}],["delete(':genreid",{"_index":111,"title":{},"body":{"controllers/GenresController.html":{}}}],["deletegenre",{"_index":98,"title":{},"body":{"controllers/GenresController.html":{},"injectables/GenresService.html":{}}}],["deletegenre(@param('genreid",{"_index":136,"title":{},"body":{"controllers/GenresController.html":{}}}],["deletegenre(genreid",{"_index":110,"title":{},"body":{"controllers/GenresController.html":{},"injectables/GenresService.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/GenresModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":281,"title":{},"body":{"index.html":{}}}],["development",{"_index":290,"title":{},"body":{"index.html":{}}}],["dns",{"_index":209,"title":{},"body":{"injectables/TerminusOptionsService.html":{}}}],["dnshealthindicator",{"_index":207,"title":{},"body":{"injectables/TerminusOptionsService.html":{}}}],["document",{"_index":90,"title":{},"body":{"interfaces/Genre.html":{}}}],["documentation",{"_index":223,"title":{},"body":{"coverage.html":{}}}],["doesn´t",{"_index":195,"title":{},"body":{"injectables/Messages.html":{}}}],["dto/genre.dto",{"_index":124,"title":{},"body":{"controllers/GenresController.html":{},"injectables/GenresService.html":{}}}],["e2e",{"_index":301,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":273,"title":{},"body":{"index.html":{}}}],["element.title",{"_index":176,"title":{},"body":{"injectables/GenresService.html":{}}}],["endpoints",{"_index":221,"title":{},"body":{"injectables/TerminusOptionsService.html":{}}}],["exist",{"_index":196,"title":{},"body":{"injectables/Messages.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BulkCreateGenreDto.html":{},"modules/CommonModule.html":{},"classes/CreateGenreDto.html":{},"interfaces/Genre.html":{},"controllers/GenresController.html":{},"modules/GenresModule.html":{},"injectables/GenresService.html":{},"classes/ListeGenreDto.html":{},"injectables/Messages.html":{},"injectables/TerminusOptionsService.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/GenresModule.html":{},"overview.html":{}}}],["express",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":89,"title":{},"body":{"interfaces/Genre.html":{}}}],["fastify",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BulkCreateGenreDto.html":{},"modules/CommonModule.html":{},"classes/CreateGenreDto.html":{},"interfaces/Genre.html":{},"controllers/GenresController.html":{},"modules/GenresModule.html":{},"injectables/GenresService.html":{},"classes/ListeGenreDto.html":{},"injectables/Messages.html":{},"injectables/TerminusOptionsService.html":{},"coverage.html":{}}}],["found",{"_index":200,"title":{},"body":{"injectables/Messages.html":{}}}],["framework",{"_index":271,"title":{},"body":{"index.html":{}}}],["function",{"_index":236,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":265,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["genre",{"_index":86,"title":{"interfaces/Genre.html":{}},"body":{"interfaces/Genre.html":{},"controllers/GenresController.html":{},"modules/GenresModule.html":{},"injectables/GenresService.html":{},"coverage.html":{}}}],["genrecreated",{"_index":170,"title":{},"body":{"injectables/GenresService.html":{}}}],["genrecreated.save",{"_index":173,"title":{},"body":{"injectables/GenresService.html":{}}}],["genreid",{"_index":113,"title":{},"body":{"controllers/GenresController.html":{},"injectables/GenresService.html":{}}}],["genremodel",{"_index":152,"title":{},"body":{"injectables/GenresService.html":{}}}],["genres",{"_index":72,"title":{},"body":{"classes/BulkCreateGenreDto.html":{},"classes/CreateGenreDto.html":{},"controllers/GenresController.html":{},"classes/ListeGenreDto.html":{}}}],["genres.controller",{"_index":141,"title":{},"body":{"modules/GenresModule.html":{}}}],["genres.service",{"_index":123,"title":{},"body":{"controllers/GenresController.html":{},"modules/GenresModule.html":{}}}],["genres/genres.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["genreschema",{"_index":142,"title":{},"body":{"modules/GenresModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["genrescontroller",{"_index":92,"title":{"controllers/GenresController.html":{}},"body":{"controllers/GenresController.html":{},"modules/GenresModule.html":{},"coverage.html":{}}}],["genresmodule",{"_index":42,"title":{"modules/GenresModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GenresModule.html":{},"modules.html":{},"overview.html":{}}}],["genresservice",{"_index":122,"title":{"injectables/GenresService.html":{}},"body":{"controllers/GenresController.html":{},"modules/GenresModule.html":{},"injectables/GenresService.html":{},"coverage.html":{},"overview.html":{}}}],["genresservice:genresservice",{"_index":126,"title":{},"body":{"controllers/GenresController.html":{}}}],["get(':genreid",{"_index":115,"title":{},"body":{"controllers/GenresController.html":{}}}],["getgenre",{"_index":99,"title":{},"body":{"controllers/GenresController.html":{},"injectables/GenresService.html":{}}}],["getgenre(@param('genreid",{"_index":130,"title":{},"body":{"controllers/GenresController.html":{}}}],["getgenre(genreid",{"_index":114,"title":{},"body":{"controllers/GenresController.html":{},"injectables/GenresService.html":{}}}],["getgenres",{"_index":100,"title":{},"body":{"controllers/GenresController.html":{},"injectables/GenresService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":267,"title":{"index.html":{}},"body":{}}],["godaddy/terminus",{"_index":240,"title":{},"body":{"dependencies.html":{}}}],["graph",{"_index":333,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":308,"title":{},"body":{"index.html":{}}}],["health",{"_index":217,"title":{},"body":{"injectables/TerminusOptionsService.html":{}}}],["healthendpoint",{"_index":215,"title":{},"body":{"injectables/TerminusOptionsService.html":{}}}],["healthindicators",{"_index":218,"title":{},"body":{"injectables/TerminusOptionsService.html":{}}}],["heavily",{"_index":278,"title":{},"body":{"index.html":{}}}],["hello",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":319,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/genres",{"_index":220,"title":{},"body":{"injectables/TerminusOptionsService.html":{}}}],["httpexception",{"_index":160,"title":{},"body":{"injectables/GenresService.html":{}}}],["httpexception(messages.itemdoesnotexists",{"_index":182,"title":{},"body":{"injectables/GenresService.html":{}}}],["https://nestjs.com",{"_index":326,"title":{},"body":{"index.html":{}}}],["id",{"_index":82,"title":{},"body":{"classes/BulkCreateGenreDto.html":{},"classes/CreateGenreDto.html":{},"interfaces/Genre.html":{},"classes/ListeGenreDto.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":224,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":214,"title":{},"body":{"injectables/TerminusOptionsService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BulkCreateGenreDto.html":{},"modules/CommonModule.html":{},"classes/CreateGenreDto.html":{},"interfaces/Genre.html":{},"controllers/GenresController.html":{},"modules/GenresModule.html":{},"injectables/GenresService.html":{},"classes/ListeGenreDto.html":{},"injectables/Messages.html":{},"injectables/TerminusOptionsService.html":{}}}],["imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/GenresModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BulkCreateGenreDto.html":{},"classes/CreateGenreDto.html":{},"interfaces/Genre.html":{},"controllers/GenresController.html":{},"injectables/GenresService.html":{},"classes/ListeGenreDto.html":{},"injectables/Messages.html":{},"injectables/TerminusOptionsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BulkCreateGenreDto.html":{},"modules/CommonModule.html":{},"classes/CreateGenreDto.html":{},"interfaces/Genre.html":{},"controllers/GenresController.html":{},"modules/GenresModule.html":{},"injectables/GenresService.html":{},"classes/ListeGenreDto.html":{},"injectables/Messages.html":{},"injectables/TerminusOptionsService.html":{}}}],["infrastructure/terminus",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":62,"title":{"injectables/AppService.html":{},"injectables/GenresService.html":{},"injectables/Messages.html":{},"injectables/TerminusOptionsService.html":{}},"body":{"injectables/AppService.html":{},"injectables/GenresService.html":{},"injectables/Messages.html":{},"injectables/TerminusOptionsService.html":{},"coverage.html":{}}}],["injectables",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"injectables/GenresService.html":{},"injectables/Messages.html":{},"injectables/TerminusOptionsService.html":{},"overview.html":{}}}],["injectmodel",{"_index":161,"title":{},"body":{"injectables/GenresService.html":{}}}],["inspired",{"_index":279,"title":{},"body":{"index.html":{}}}],["installation",{"_index":286,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":288,"title":{},"body":{"index.html":{}}}],["interface",{"_index":85,"title":{"interfaces/Genre.html":{}},"body":{"interfaces/Genre.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":87,"title":{},"body":{"interfaces/Genre.html":{}}}],["interfaces/genre.interface",{"_index":162,"title":{},"body":{"injectables/GenresService.html":{}}}],["isavailable",{"_index":167,"title":{},"body":{"injectables/GenresService.html":{}}}],["item",{"_index":194,"title":{},"body":{"injectables/Messages.html":{}}}],["itemdoesnotexists",{"_index":189,"title":{},"body":{"injectables/Messages.html":{}}}],["itemnotavailable",{"_index":190,"title":{},"body":{"injectables/Messages.html":{}}}],["itemnotfound",{"_index":191,"title":{},"body":{"injectables/Messages.html":{}}}],["join",{"_index":315,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":323,"title":{},"body":{"index.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/GenresModule.html":{},"overview.html":{}}}],["license",{"_index":329,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":305,"title":{},"body":{"index.html":{}}}],["listegenredto",{"_index":81,"title":{"classes/ListeGenreDto.html":{}},"body":{"classes/BulkCreateGenreDto.html":{},"classes/CreateGenreDto.html":{},"classes/ListeGenreDto.html":{},"coverage.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BulkCreateGenreDto.html":{},"modules/CommonModule.html":{},"classes/CreateGenreDto.html":{},"interfaces/Genre.html":{},"controllers/GenresController.html":{},"modules/GenresModule.html":{},"injectables/GenresService.html":{},"classes/ListeGenreDto.html":{},"injectables/Messages.html":{},"injectables/TerminusOptionsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":163,"title":{"injectables/Messages.html":{}},"body":{"injectables/GenresService.html":{},"injectables/Messages.html":{},"coverage.html":{}}}],["metadata",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/GenresController.html":{},"injectables/GenresService.html":{},"injectables/TerminusOptionsService.html":{}}}],["miscellaneous",{"_index":264,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":304,"title":{},"body":{"index.html":{}}}],["mode",{"_index":294,"title":{},"body":{"index.html":{}}}],["model",{"_index":150,"title":{},"body":{"injectables/GenresService.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/GenresModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/GenresModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/GenresModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":79,"title":{},"body":{"classes/BulkCreateGenreDto.html":{},"classes/CreateGenreDto.html":{},"interfaces/Genre.html":{},"injectables/GenresService.html":{},"classes/ListeGenreDto.html":{}}}],["mongoose",{"_index":91,"title":{},"body":{"interfaces/Genre.html":{},"injectables/GenresService.html":{},"dependencies.html":{}}}],["mongoose.schema",{"_index":341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/GenresModule.html":{}}}],["mongoosemodule.forfeature",{"_index":144,"title":{},"body":{"modules/GenresModule.html":{}}}],["mongoosemodule.forroot('mongodb://localhost/movies",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":318,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":324,"title":{},"body":{"index.html":{}}}],["name",{"_index":105,"title":{},"body":{"controllers/GenresController.html":{},"modules/GenresModule.html":{},"injectables/GenresService.html":{},"injectables/TerminusOptionsService.html":{}}}],["nest",{"_index":282,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":328,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"controllers/GenresController.html":{},"modules/GenresModule.html":{},"injectables/GenresService.html":{},"injectables/Messages.html":{},"injectables/TerminusOptionsService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":243,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/GenresModule.html":{},"injectables/GenresService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":77,"title":{},"body":{"classes/BulkCreateGenreDto.html":{},"classes/CreateGenreDto.html":{},"classes/ListeGenreDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"injectables/TerminusOptionsService.html":{},"dependencies.html":{}}}],["new",{"_index":171,"title":{},"body":{"injectables/GenresService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":270,"title":{},"body":{"index.html":{}}}],["npm",{"_index":287,"title":{},"body":{"index.html":{}}}],["objectid",{"_index":78,"title":{},"body":{"classes/BulkCreateGenreDto.html":{},"classes/CreateGenreDto.html":{},"interfaces/Genre.html":{},"injectables/GenresService.html":{},"classes/ListeGenreDto.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":306,"title":{},"body":{"index.html":{}}}],["optional",{"_index":106,"title":{},"body":{"controllers/GenresController.html":{},"injectables/GenresService.html":{},"injectables/TerminusOptionsService.html":{}}}],["options.service",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["options.service.ts",{"_index":204,"title":{},"body":{"injectables/TerminusOptionsService.html":{},"coverage.html":{}}}],["options.service.ts:11",{"_index":208,"title":{},"body":{"injectables/TerminusOptionsService.html":{}}}],["options.service.ts:16",{"_index":210,"title":{},"body":{"injectables/TerminusOptionsService.html":{}}}],["out",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/GenresModule.html":{},"overview.html":{}}}],["overview",{"_index":334,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":239,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":118,"title":{},"body":{"controllers/GenresController.html":{}}}],["parameters",{"_index":104,"title":{},"body":{"controllers/GenresController.html":{},"injectables/GenresService.html":{},"injectables/TerminusOptionsService.html":{}}}],["please",{"_index":316,"title":{},"body":{"index.html":{}}}],["post",{"_index":102,"title":{},"body":{"controllers/GenresController.html":{}}}],["post('/bulk",{"_index":108,"title":{},"body":{"controllers/GenresController.html":{}}}],["prefix",{"_index":94,"title":{},"body":{"controllers/GenresController.html":{}}}],["private",{"_index":166,"title":{},"body":{"injectables/GenresService.html":{},"injectables/TerminusOptionsService.html":{}}}],["production",{"_index":296,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":269,"title":{},"body":{"index.html":{}}}],["project",{"_index":307,"title":{},"body":{"index.html":{}}}],["promise",{"_index":154,"title":{},"body":{"injectables/GenresService.html":{}}}],["properties",{"_index":71,"title":{},"body":{"classes/BulkCreateGenreDto.html":{},"classes/CreateGenreDto.html":{},"interfaces/Genre.html":{},"classes/ListeGenreDto.html":{},"injectables/Messages.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/GenresModule.html":{},"overview.html":{}}}],["public",{"_index":202,"title":{},"body":{"injectables/Messages.html":{}}}],["query",{"_index":120,"title":{},"body":{"controllers/GenresController.html":{}}}],["read",{"_index":317,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/BulkCreateGenreDto.html":{},"classes/CreateGenreDto.html":{},"injectables/GenresService.html":{},"classes/ListeGenreDto.html":{},"injectables/Messages.html":{},"injectables/TerminusOptionsService.html":{}}}],["reflect",{"_index":255,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":285,"title":{},"body":{"index.html":{}}}],["reset",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/GenresModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BulkCreateGenreDto.html":{},"modules/CommonModule.html":{},"classes/CreateGenreDto.html":{},"interfaces/Genre.html":{},"controllers/GenresController.html":{},"modules/GenresModule.html":{},"injectables/GenresService.html":{},"classes/ListeGenreDto.html":{},"injectables/Messages.html":{},"injectables/TerminusOptionsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BulkCreateGenreDto.html":{},"modules/CommonModule.html":{},"classes/CreateGenreDto.html":{},"interfaces/Genre.html":{},"controllers/GenresController.html":{},"modules/GenresModule.html":{},"injectables/GenresService.html":{},"classes/ListeGenreDto.html":{},"injectables/Messages.html":{},"injectables/TerminusOptionsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/GenresController.html":{},"injectables/GenresService.html":{},"injectables/TerminusOptionsService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/GenresController.html":{},"injectables/GenresService.html":{},"injectables/TerminusOptionsService.html":{}}}],["rimraf",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":291,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":260,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":274,"title":{},"body":{"index.html":{}}}],["schema",{"_index":145,"title":{},"body":{"modules/GenresModule.html":{}}}],["schemas/genre.schema",{"_index":143,"title":{},"body":{"modules/GenresModule.html":{}}}],["server",{"_index":275,"title":{},"body":{"index.html":{}}}],["side",{"_index":276,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BulkCreateGenreDto.html":{},"modules/CommonModule.html":{},"classes/CreateGenreDto.html":{},"interfaces/Genre.html":{},"controllers/GenresController.html":{},"modules/GenresModule.html":{},"injectables/GenresService.html":{},"classes/ListeGenreDto.html":{},"injectables/Messages.html":{},"injectables/TerminusOptionsService.html":{},"index.html":{}}}],["sponsors",{"_index":310,"title":{},"body":{"index.html":{}}}],["src/.../genre.schema.ts",{"_index":340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":266,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":65,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/common.module.ts",{"_index":83,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/messages.ts",{"_index":187,"title":{},"body":{"injectables/Messages.html":{},"coverage.html":{}}}],["src/common/messages.ts:5",{"_index":199,"title":{},"body":{"injectables/Messages.html":{}}}],["src/common/messages.ts:6",{"_index":201,"title":{},"body":{"injectables/Messages.html":{}}}],["src/common/messages.ts:7",{"_index":197,"title":{},"body":{"injectables/Messages.html":{}}}],["src/genres/dto/genre.dto.ts",{"_index":70,"title":{},"body":{"classes/BulkCreateGenreDto.html":{},"classes/CreateGenreDto.html":{},"classes/ListeGenreDto.html":{},"coverage.html":{}}}],["src/genres/dto/genre.dto.ts:13",{"_index":76,"title":{},"body":{"classes/BulkCreateGenreDto.html":{}}}],["src/genres/dto/genre.dto.ts:19",{"_index":185,"title":{},"body":{"classes/ListeGenreDto.html":{}}}],["src/genres/dto/genre.dto.ts:22",{"_index":186,"title":{},"body":{"classes/ListeGenreDto.html":{}}}],["src/genres/dto/genre.dto.ts:7",{"_index":84,"title":{},"body":{"classes/CreateGenreDto.html":{}}}],["src/genres/genres.controller.ts",{"_index":93,"title":{},"body":{"controllers/GenresController.html":{},"coverage.html":{}}}],["src/genres/genres.controller.ts:10",{"_index":117,"title":{},"body":{"controllers/GenresController.html":{}}}],["src/genres/genres.controller.ts:16",{"_index":116,"title":{},"body":{"controllers/GenresController.html":{}}}],["src/genres/genres.controller.ts:22",{"_index":103,"title":{},"body":{"controllers/GenresController.html":{}}}],["src/genres/genres.controller.ts:28",{"_index":109,"title":{},"body":{"controllers/GenresController.html":{}}}],["src/genres/genres.controller.ts:34",{"_index":112,"title":{},"body":{"controllers/GenresController.html":{}}}],["src/genres/genres.module.ts",{"_index":140,"title":{},"body":{"modules/GenresModule.html":{}}}],["src/genres/genres.service.ts",{"_index":146,"title":{},"body":{"injectables/GenresService.html":{},"coverage.html":{}}}],["src/genres/genres.service.ts:11",{"_index":151,"title":{},"body":{"injectables/GenresService.html":{}}}],["src/genres/genres.service.ts:14",{"_index":153,"title":{},"body":{"injectables/GenresService.html":{}}}],["src/genres/genres.service.ts:25",{"_index":156,"title":{},"body":{"injectables/GenresService.html":{}}}],["src/genres/genres.service.ts:40",{"_index":159,"title":{},"body":{"injectables/GenresService.html":{}}}],["src/genres/genres.service.ts:44",{"_index":158,"title":{},"body":{"injectables/GenresService.html":{}}}],["src/genres/genres.service.ts:52",{"_index":157,"title":{},"body":{"injectables/GenresService.html":{}}}],["src/genres/interfaces/genre.interface.ts",{"_index":88,"title":{},"body":{"interfaces/Genre.html":{},"coverage.html":{}}}],["src/genres/schemas/genre.schema.ts",{"_index":232,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/terminus",{"_index":203,"title":{},"body":{"injectables/TerminusOptionsService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":235,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":292,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":295,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":297,"title":{},"body":{"index.html":{}}}],["started",{"_index":268,"title":{"index.html":{}},"body":{}}],["starter",{"_index":284,"title":{},"body":{"index.html":{}}}],["statements",{"_index":225,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":188,"title":{},"body":{"injectables/Messages.html":{}}}],["stay",{"_index":320,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BulkCreateGenreDto.html":{},"classes/CreateGenreDto.html":{},"interfaces/Genre.html":{},"classes/ListeGenreDto.html":{},"injectables/Messages.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":311,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":331,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":252,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":237,"title":{},"body":{"coverage.html":{}}}],["terminusendpoint",{"_index":212,"title":{},"body":{"injectables/TerminusOptionsService.html":{}}}],["terminusmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["terminusmodule.forrootasync",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["terminusmoduleoptions",{"_index":211,"title":{},"body":{"injectables/TerminusOptionsService.html":{}}}],["terminusoptionsfactory",{"_index":213,"title":{},"body":{"injectables/TerminusOptionsService.html":{}}}],["terminusoptionsservice",{"_index":55,"title":{"injectables/TerminusOptionsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/TerminusOptionsService.html":{},"coverage.html":{}}}],["test",{"_index":300,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":303,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":302,"title":{},"body":{"index.html":{}}}],["tests",{"_index":299,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":309,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.dns.pingcheck('genres",{"_index":219,"title":{},"body":{"injectables/TerminusOptionsService.html":{}}}],["this.genremodel(creategenredto",{"_index":172,"title":{},"body":{"injectables/GenresService.html":{}}}],["this.genremodel(element",{"_index":177,"title":{},"body":{"injectables/GenresService.html":{}}}],["this.genremodel.find().exec",{"_index":178,"title":{},"body":{"injectables/GenresService.html":{}}}],["this.genremodel.findbyid(genreid).exec",{"_index":180,"title":{},"body":{"injectables/GenresService.html":{}}}],["this.genremodel.findbyidanddelete(genreid).exec",{"_index":184,"title":{},"body":{"injectables/GenresService.html":{}}}],["this.genremodel.findone",{"_index":168,"title":{},"body":{"injectables/GenresService.html":{}}}],["this.genresservice.creategenre(creategenredto",{"_index":133,"title":{},"body":{"controllers/GenresController.html":{}}}],["this.genresservice.creategenres(bulkcreategenredto",{"_index":135,"title":{},"body":{"controllers/GenresController.html":{}}}],["this.genresservice.deletegenre(genreid",{"_index":137,"title":{},"body":{"controllers/GenresController.html":{}}}],["this.genresservice.getgenre(genreid",{"_index":131,"title":{},"body":{"controllers/GenresController.html":{}}}],["this.genresservice.getgenres",{"_index":129,"title":{},"body":{"controllers/GenresController.html":{}}}],["throw",{"_index":181,"title":{},"body":{"injectables/GenresService.html":{}}}],["title",{"_index":80,"title":{},"body":{"classes/BulkCreateGenreDto.html":{},"classes/CreateGenreDto.html":{},"interfaces/Genre.html":{},"injectables/GenresService.html":{},"classes/ListeGenreDto.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":321,"title":{},"body":{"index.html":{}}}],["twitter",{"_index":327,"title":{},"body":{"index.html":{}}}],["type",{"_index":73,"title":{},"body":{"classes/BulkCreateGenreDto.html":{},"classes/CreateGenreDto.html":{},"interfaces/Genre.html":{},"controllers/GenresController.html":{},"injectables/GenresService.html":{},"classes/ListeGenreDto.html":{},"injectables/Messages.html":{},"injectables/TerminusOptionsService.html":{},"coverage.html":{}}}],["types/mongoose",{"_index":249,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":283,"title":{},"body":{"index.html":{}}}],["ui",{"_index":262,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":298,"title":{},"body":{"index.html":{}}}],["url",{"_index":216,"title":{},"body":{"injectables/TerminusOptionsService.html":{}}}],["useclass",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["value",{"_index":193,"title":{},"body":{"injectables/Messages.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":179,"title":{},"body":{"injectables/GenresService.html":{}}}],["variable",{"_index":233,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":339,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":293,"title":{},"body":{"index.html":{}}}],["website",{"_index":325,"title":{},"body":{"index.html":{}}}],["world",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":314,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/GenresModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nGenresModule\n\nGenresModule\n\nAppModule -->\n\nGenresModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GenresModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service'; \nimport { GenresModule } from './genres/genres.module';\nimport { CommonModule } from './common/common.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { TerminusOptionsService } from './infrastructure/terminus-options.service';\n\n@Module({\n  imports: [GenresModule, \n    CommonModule, \n    MongooseModule.forRoot('mongodb://localhost/movies-catalog'),\n    TerminusModule.forRootAsync({\n      useClass: TerminusOptionsService,\n    }),],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BulkCreateGenreDto.html":{"url":"classes/BulkCreateGenreDto.html","title":"class - BulkCreateGenreDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BulkCreateGenreDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/genres/dto/genre.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                genres\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            genres\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CreateGenreDto[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/genres/dto/genre.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from '@nestjs/swagger';\nimport { ObjectID } from \"mongodb\";\n\nexport class CreateGenreDto {\n\n    @ApiModelProperty()\n    readonly title: string;\n}\n\nexport class  BulkCreateGenreDto{\n\n    @ApiModelProperty()\n    readonly genres: CreateGenreDto[];\n}\n\nexport class ListeGenreDto {\n\n    @ApiModelProperty()\n    readonly id: string;\n    \n    @ApiModelProperty()\n    readonly title: string;\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGenreDto.html":{"url":"classes/CreateGenreDto.html","title":"class - CreateGenreDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGenreDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/genres/dto/genre.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/genres/dto/genre.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from '@nestjs/swagger';\nimport { ObjectID } from \"mongodb\";\n\nexport class CreateGenreDto {\n\n    @ApiModelProperty()\n    readonly title: string;\n}\n\nexport class  BulkCreateGenreDto{\n\n    @ApiModelProperty()\n    readonly genres: CreateGenreDto[];\n}\n\nexport class ListeGenreDto {\n\n    @ApiModelProperty()\n    readonly id: string;\n    \n    @ApiModelProperty()\n    readonly title: string;\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Genre.html":{"url":"interfaces/Genre.html","title":"interface - Genre","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Genre\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/genres/interfaces/genre.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'; \nimport { ObjectID } from 'mongodb';\n\nexport interface Genre extends Document {\n  id: String;\n  title: String;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GenresController.html":{"url":"controllers/GenresController.html","title":"controller - GenresController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GenresController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/genres/genres.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                genres\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGenre\n                            \n                            \n                                    Async\n                                createGenreBulk\n                            \n                            \n                                    Async\n                                deleteGenre\n                            \n                            \n                                    Async\n                                getGenre\n                            \n                            \n                                    Async\n                                getGenres\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGenre\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGenre(createGenreDto: CreateGenreDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/genres/genres.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createGenreDto\n                                    \n                                                CreateGenreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGenreBulk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGenreBulk(bulkCreateGenreDto: BulkCreateGenreDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/bulk')\n                \n            \n\n            \n                \n                    Defined in src/genres/genres.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bulkCreateGenreDto\n                                    \n                                                BulkCreateGenreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteGenre\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteGenre(genreID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':genreID')\n                \n            \n\n            \n                \n                    Defined in src/genres/genres.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    genreID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGenre\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGenre(genreID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':genreID')\n                \n            \n\n            \n                \n                    Defined in src/genres/genres.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    genreID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGenres\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGenres()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/genres/genres.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Post, Body, Query, Delete } from '@nestjs/common';\nimport { GenresService } from './genres.service';\nimport { CreateGenreDto, BulkCreateGenreDto } from './dto/genre.dto';\n\n@Controller('genres')\nexport class GenresController {\n    constructor(private genresService:GenresService) { }\n\n    @Get()\n    async getGenres() {\n        const genres = await this.genresService.getGenres();\n        return genres;\n    }\n\n    @Get(':genreID')\n    async getGenre(@Param('genreID') genreID) {\n        const genre = await this.genresService.getGenre(genreID);\n        return genre;\n    }\n\n    @Post()\n    async createGenre(@Body() createGenreDto: CreateGenreDto) {\n        const genres = await this.genresService.createGenre(createGenreDto);\n        return genres;\n    }\n\n    @Post('/bulk')\n    async createGenreBulk(@Body() bulkCreateGenreDto: BulkCreateGenreDto) {\n        const genres = await this.genresService.createGenres(bulkCreateGenreDto);\n        return genres;\n    }\n\n    @Delete(':genreID')\n    async deleteGenre(@Param('genreID') genreID) {\n        const genres = await this.genresService.deleteGenre(genreID);\n        return genres;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GenresModule.html":{"url":"modules/GenresModule.html","title":"module - GenresModule","body":"\n                   \n\n\n\n\n    Modules\n    GenresModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GenresModule\n\n\n\ncluster_GenresModule_providers\n\n\n\n\nGenresService\n\nGenresService\n\n\n\nGenresModule\n\nGenresModule\n\nGenresModule -->\n\nGenresService->GenresModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/genres/genres.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GenresService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GenresController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { GenresController } from './genres.controller';\nimport { GenresService } from './genres.service';\nimport { GenreSchema } from './schemas/genre.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: 'Genre', schema: GenreSchema }])],\n  controllers: [GenresController],\n  providers: [GenresService]\n})\nexport class GenresModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenresService.html":{"url":"injectables/GenresService.html","title":"injectable - GenresService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GenresService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/genres/genres.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGenre\n                            \n                            \n                                    Async\n                                createGenres\n                            \n                            \n                                    Async\n                                deleteGenre\n                            \n                            \n                                    Async\n                                getGenre\n                            \n                            \n                                    Async\n                                getGenres\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(genreModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/genres/genres.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        genreModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGenre\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGenre(creategenreDto: CreateGenreDto)\n                \n            \n\n\n            \n                \n                    Defined in src/genres/genres.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creategenreDto\n                                    \n                                                CreateGenreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGenres\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGenres(bulkCreateGenreDto: BulkCreateGenreDto)\n                \n            \n\n\n            \n                \n                    Defined in src/genres/genres.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bulkCreateGenreDto\n                                    \n                                                BulkCreateGenreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteGenre\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteGenre(genreId: ObjectID)\n                \n            \n\n\n            \n                \n                    Defined in src/genres/genres.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    genreId\n                                    \n                                            ObjectID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGenre\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGenre(genreId: ObjectID)\n                \n            \n\n\n            \n                \n                    Defined in src/genres/genres.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    genreId\n                                    \n                                            ObjectID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGenres\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGenres()\n                \n            \n\n\n            \n                \n                    Defined in src/genres/genres.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ObjectID } from 'mongodb';\nimport { Injectable, HttpException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Genre } from './interfaces/genre.interface';\nimport { CreateGenreDto } from './dto/genre.dto';\nimport { BulkCreateGenreDto } from './dto/genre.dto';\nimport { Messages } from '../common/messages'\n\n@Injectable()\nexport class GenresService {\n    constructor(@InjectModel('Genre') private readonly genreModel: Model) { }\n\n    async createGenre(creategenreDto: CreateGenreDto): Promise {\n\n        const isAvailable = this.genreModel.findOne({ title: creategenreDto.title });\n        if (!isAvailable) {\n            const genreCreated = new this.genreModel(creategenreDto);\n            genreCreated.save();\n        } \n\n        return;\n    }\n\n    async createGenres(bulkCreateGenreDto: BulkCreateGenreDto): Promise {\n\n        if (bulkCreateGenreDto.genres) {\n            bulkCreateGenreDto.genres.forEach(element => {\n                const isAvailable = this.genreModel.findOne({ title: element.title });\n                if (!isAvailable) {\n                    const genreCreated = new this.genreModel(element);\n                    genreCreated.save();\n                }\n            });\n        }\n\n        return;\n    }\n\n    async getGenres(): Promise {\n        return await this.genreModel.find().exec();\n    }\n\n    async getGenre(genreId: ObjectID): Promise {\n        var genre = await this.genreModel.findById(genreId).exec();\n        if (!genre) {\n            throw new HttpException(Messages.itemDoesNotExists, 404);\n        }\n        return genre;\n    }\n\n    async deleteGenre(genreId: ObjectID): Promise {\n        return await this.genreModel.findByIdAndDelete(genreId).exec();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListeGenreDto.html":{"url":"classes/ListeGenreDto.html","title":"class - ListeGenreDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListeGenreDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/genres/dto/genre.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/genres/dto/genre.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/genres/dto/genre.dto.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from '@nestjs/swagger';\nimport { ObjectID } from \"mongodb\";\n\nexport class CreateGenreDto {\n\n    @ApiModelProperty()\n    readonly title: string;\n}\n\nexport class  BulkCreateGenreDto{\n\n    @ApiModelProperty()\n    readonly genres: CreateGenreDto[];\n}\n\nexport class ListeGenreDto {\n\n    @ApiModelProperty()\n    readonly id: string;\n    \n    @ApiModelProperty()\n    readonly title: string;\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Messages.html":{"url":"injectables/Messages.html","title":"injectable - Messages","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Messages\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/messages.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                itemDoesNotExists\n                            \n                            \n                                    Static\n                                    Readonly\n                                itemNotAvailable\n                            \n                            \n                                    Static\n                                    Readonly\n                                itemNotFound\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            itemDoesNotExists\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Item doesn´t exist.\"\n                        \n                    \n                        \n                            \n                                    Defined in src/common/messages.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            itemNotAvailable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Item is not available.\"\n                        \n                    \n                        \n                            \n                                    Defined in src/common/messages.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            itemNotFound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Item is not found.\"\n                        \n                    \n                        \n                            \n                                    Defined in src/common/messages.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class Messages {\n    public static readonly itemNotAvailable = \"Item is not available.\";\n    public static readonly itemNotFound = \"Item is not found.\";\n    public static readonly itemDoesNotExists = \"Item doesn´t exist.\";\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TerminusOptionsService.html":{"url":"injectables/TerminusOptionsService.html","title":"injectable - TerminusOptionsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TerminusOptionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/terminus-options.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTerminusOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dns: DNSHealthIndicator)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/terminus-options.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dns\n                                                  \n                                                        \n                                                                    DNSHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTerminusOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTerminusOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/terminus-options.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TerminusModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    TerminusEndpoint,\n    TerminusOptionsFactory,\n    DNSHealthIndicator,\n    TerminusModuleOptions\n  } from '@nestjs/terminus';\n\n  import { Injectable } from '@nestjs/common';\n  \n  @Injectable()\n  export class TerminusOptionsService implements TerminusOptionsFactory {\n    constructor(\n      private readonly dns: DNSHealthIndicator,\n    ) {}\n  \n    createTerminusOptions(): TerminusModuleOptions {\n      const healthEndpoint: TerminusEndpoint = {\n        url: '/health',\n        healthIndicators: [\n          async () => this.dns.pingCheck('genres', 'http://localhost:3000/genres')\n        ],\n      };\n      return {\n        endpoints: [healthEndpoint],\n      };\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/messages.ts\n            \n            injectable\n            Messages\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/genres/dto/genre.dto.ts\n            \n            class\n            BulkCreateGenreDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/genres/dto/genre.dto.ts\n            \n            class\n            CreateGenreDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/genres/dto/genre.dto.ts\n            \n            class\n            ListeGenreDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/genres/genres.controller.ts\n            \n            controller\n            GenresController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/genres/genres.service.ts\n            \n            injectable\n            GenresService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/genres/interfaces/genre.interface.ts\n            \n            interface\n            Genre\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/genres/schemas/genre.schema.ts\n            \n            variable\n            GenreSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/terminus-options.service.ts\n            \n            injectable\n            TerminusOptionsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @godaddy/terminus : ^4.1.2\n        \n            @nestjs/common : ^6.0.0\n        \n            @nestjs/core : ^6.0.0\n        \n            @nestjs/mongoose : ^6.1.2\n        \n            @nestjs/platform-express : ^6.0.0\n        \n            @nestjs/swagger : ^3.1.0\n        \n            @nestjs/terminus : ^6.5.0\n        \n            @types/mongoose : ^5.5.11\n        \n            fastify-swagger : ^2.4.0\n        \n            mongoose : ^5.6.6\n        \n            reflect-metadata : ^0.1.12\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ^6.3.3\n        \n            swagger-ui-express : ^4.0.7\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GenresModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_GenresModule\n\n\n\ncluster_GenresModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nGenresModule\n\nGenresModule\n\nAppModule -->\n\nGenresModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nGenresService\n\nGenresService\n\nGenresModule -->\n\nGenresService->GenresModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GenreSchema   (src/.../genre.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/genres/schemas/genre.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GenreSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  id: ObjectID,\n  title: String\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
